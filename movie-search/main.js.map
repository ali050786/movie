{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/logo-component/logo-component.css","webpack:///./src/app/logo-component/logo-component.html","webpack:///./src/app/logo-component/logo-component.ts","webpack:///./src/app/movie-list-component/movie-details-component/movie-details-component.css","webpack:///./src/app/movie-list-component/movie-details-component/movie-details-component.html","webpack:///./src/app/movie-list-component/movie-details-component/movie-details-component.ts","webpack:///./src/app/movie-list-component/movie-list-component.css","webpack:///./src/app/movie-list-component/movie-list-component.html","webpack:///./src/app/movie-list-component/movie-list-component.ts","webpack:///./src/app/shared/movie-services.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      <app-logo></app-logo>\\n    </div>\\n    <div class=\\\"col-sm-10\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'movie-search';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n//import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n\n\nimport { AppComponent } from './app.component';\nimport { LogoComponent } from './logo-component/logo-component';\nimport { MovieListComponent } from './movie-list-component/movie-list-component';\nimport { MovieServices } from './shared/movie-services';\nimport { HttpClientModule } from '@angular/common/http'\nimport { MovieDetails } from './movie-list-component/movie-details-component/movie-details-component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogoComponent,\n    MovieListComponent,\n    MovieDetails\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n         {path: 'movies', component:MovieListComponent},\n         {path: 'movies/:id', component:MovieDetails},\n         {path: '', redirectTo:'movies', pathMatch:'full'}\n    ])\n    \n    //CommonModule\n  ],\n  providers: [ MovieServices ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".header span{\\r\\n    font-size:28px;\\r\\n    line-height: 150px;\\r\\n    padding:0 30px;\\r\\n    color: #515A60;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"header\\\">\\r\\n    <span> {{name}}</span>\\r\\n</div>\"","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n       selector: 'app-logo',\r\n       templateUrl: 'logo-component.html',\r\n       styleUrls:['logo-component.css']\r\n})\r\n\r\nexport class LogoComponent{\r\n    name = \"MovieFlix\"\r\n}","module.exports = \".movie-details{\\r\\n    margin-top: 40px;\\r\\n    color:#fff;\\r\\n}\\r\\n\\r\\n.movie-details span{\\r\\n    color: #515A60;\\r\\n}\\r\\n\\r\\n.rating-boxs{    \\r\\n    background: rgba(0, 0, 0, 0.4);\\r\\n    padding-top:20px;\\r\\n}\\r\\n\\r\\n.rating-title{\\r\\n    color:#F14103;\\r\\n}\\r\\n\\r\\n.rating-value{\\r\\n   font-size: 2em;\\r\\n   margin-top:-24px;\\r\\n   font-weight: bold;  \\r\\n}\"","module.exports = \"<div class=\\\"movie-details\\\" >\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showdetails\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <img src=\\\"{{moviedetails.Poster}}\\\" class=\\\"img-fluid\\\" (click)=\\\"callme()\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n        <h1>{{moviedetails.Title}}</h1>\\r\\n        <p>Released on:<span> {{moviedetails.Year}}</span></p>\\r\\n        <p>Cast:<span> {{moviedetails.Actors}}</span></p>\\r\\n        <p>Plot: <span> {{moviedetails.Plot}}</span></p>\\r\\n        <div class=\\\"row rating-boxs\\\">\\r\\n            <div class=\\\"col-sm-4\\\"  *ngFor=\\\" let Rating of moviedetails.Ratings\\\">\\r\\n                <p class=\\\"rating-title\\\">{{Rating.Source}}</p>\\r\\n                <p class=\\\"rating-value\\\">{{Rating.Value}}</p>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MovieServices } from '../../shared/movie-services'\r\n\r\n@Component({\r\n templateUrl:'movie-details-component.html',\r\n styleUrls:['movie-details-component.css']\r\n})\r\n\r\nexport class MovieDetails implements OnInit {\r\n    //title = \"Your landed to a correct page\";\r\n    Id:String;\r\n    moviedetails;\r\n    showdetails = false;\r\n    \r\n    \r\n\r\n    constructor ( private _route : ActivatedRoute, private movies : MovieServices )\r\n    {\r\n        this.Id = this._route.snapshot.params['id'];\r\n    }\r\n \r\n    ngOnInit(){\r\n            this.movies.getMovieDetails(this.Id)\r\n            .subscribe(data => this.callme(data));\r\n    }\r\n    \r\n\r\n    callme(data){\r\n       this.showdetails = true; \r\n       this.moviedetails = data;\r\n       console.log(data)\r\n    }\r\n}","module.exports = \".movietitle{\\r\\n    color:#fff;\\r\\n    font-size: 1em;\\r\\n    margin-top: 10px;\\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.btn-search{\\r\\n    margin-left:20px;\\r\\n    background: #F14103;\\r\\n    color:#fff;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.search-box{\\r\\n    border:none;\\r\\n    background:  #222D36;\\r\\n    border-bottom: 1px solid #515A60;\\r\\n    width: 400px;\\r\\n    color: #515A60;\\r\\n    font-size:2em;\\r\\n    text-transform: uppercase;\\r\\n    font-weight: bold;\\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.movieyear{\\r\\n    color: #515A60;\\r\\n    margin-top: -3px;\\r\\n    font-size: 0.9em;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.movie-item{\\r\\n    margin-top:40px;\\r\\n}\\r\\n\\r\\n\\r\\n.movie-item img{\\r\\n    max-height: 340px;\\r\\n    box-shadow: 0px 0px 8px 0px rgba(0,0,0,0.5);\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"search\\\">\\r\\n        <input type=\\\"search\\\" class=\\\"search-box\\\" [(ngModel)]=\\\"userInput\\\" />\\r\\n        <button class=\\\"btn btn-search\\\" (click)=\\\"searchmovies()\\\"> Search\\r\\n            <i class=\\\"fa fa-search\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"userInput\\\">\\r\\n        \\r\\n        <div *ngFor=\\\" let movie of movieList\\\" class=\\\"movie-item col-md-3 \\\" >\\r\\n            <a [routerLink]=\\\"['/movies', movie.imdbID]\\\"><img src=\\\"{{movie.Poster}}\\\" class=\\\"img-fluid\\\" >\\r\\n            </a>\\r\\n            <div class=\\\"movietitle\\\">{{movie.Title}}</div>\\r\\n            <div class=\\\"movieyear\\\">{{movie.Year}}</div>\\r\\n        </div>\\r\\n    \\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { MovieServices} from \"../shared/movie-services\";\r\n\r\n@Component({\r\n      selector:\"app-movie-list\",\r\n      templateUrl:\"movie-list-component.html\",\r\n      styleUrls:[\"movie-list-component.css\"]\r\n})\r\n\r\nexport class MovieListComponent implements OnInit {\r\n    \r\n    \r\n    movieList : any;\r\n    userInput: String;\r\n    \r\n    constructor( private movie: MovieServices){\r\n         \r\n    }\r\n  \r\n    ngOnInit(){\r\n     this.movie.getMovieList(this.userInput).subscribe(data => this.movieList = data.Search)\r\n     \r\n    }\r\n\r\n    searchmovies(){\r\n        this.movie.getMovieList(this.userInput).subscribe(data => this.movieList = data.Search)\r\n        \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from  'rxjs';\r\n//import { Imovie } from './movie-model'\r\n\r\n\r\n@Injectable()\r\n\r\nexport class MovieServices{\r\n    \r\n    \r\n    omdbApi = \"4798fe44\";\r\n    _url:any;\r\n    _detailsUrl:any;\r\n    _imdbId:any\r\n    userInput:String = \"run\";\r\n\r\n    constructor ( private http: HttpClient){}\r\n\r\n    getMovieList(userInput):Observable<any>{\r\n        //this.MovieList = \"here is the movie list\";\r\n        \r\n        this._url = \"http://www.omdbapi.com/?s=\" +userInput+ \"&apikey=\" + this.omdbApi;\r\n\r\n        return this.http.get(this._url)\r\n    }\r\n\r\n    getMovieDetails(id):Observable<any>{\r\n               return this.http.get(\"http://www.omdbapi.com/?i=\"+id+\"&apikey=4798fe44\")\r\n    \r\n\r\n    \r\n    } \r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}